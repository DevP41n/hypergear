//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace HyperGear.Models
{
    using System;
    using System.Collections.Generic;
    using System.ComponentModel.DataAnnotations;
    using System.ComponentModel.DataAnnotations.Schema;
    using System.Linq;

    public partial class KhachHang
    {
        HyperGearEntities db = new HyperGearEntities();
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
        public KhachHang()
        {
            this.DonDatHangs = new HashSet<DonDatHang>();
        }

        public int MaKH { get; set; }
        [Display(Name = "Họ Tên")]
        public string HoTen { get; set; }
        public string Taikhoan { get; set; }
        [Required]
        [RegularExpression(@"^(?=.*[a-z])(?=.*[A-Z])(?=.*\d).{8,15}$")]
        public string Matkhau { get; set; }
        [NotMapped]
        [Required]
        [System.ComponentModel.DataAnnotations.Compare("Matkhau")]
        public string ConfirmPassword { get; set; }
        [Required]
        [RegularExpression(@"[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\.[A-Za-z]{2,4}")]
        public string Email { get; set; }
        [Display(Name = "Địa Chỉ")]
        public string DiachiKH { get; set; }
        [Display(Name = "Số điện thoại")]
        public string DienthoaiKH { get; set; }
        public Nullable<System.DateTime> Ngaysinh { get; set; }

        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<DonDatHang> DonDatHangs { get; set; }

        public long InsertForFacebook(KhachHang KH)
        {
            var user = db.KhachHangs.SingleOrDefault(x => x.Email == KH.Email);
            if (user == null)
            {
                db.KhachHangs.Add(KH);
                db.SaveChanges();
                return KH.MaKH;
            }
            else
            {
                return user.MaKH;
            }

        }
        public long InsertForgot(KhachHang KH)
        {
            var user = db.KhachHangs.SingleOrDefault(x => x.Email == KH.Email);
            if (user != null)
            {
                return user.MaKH;
            }
            return user.MaKH;
        }
    }
}
